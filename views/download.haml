.site-content
  .text
    %h1 Download

    %p
      Stable releases liberally follow the usual
      %strong major.minor.patch
      semantic versioning schema.

    %ul.download-versions
      - DOWNLOADS[:channels].each do |channel, download|
        %li
          %h2
            = download[:name] || channel.capitalize

            - if download[:branch] =~ /^\d/
              %span.download-version= "(#{download[:branch]})"

          = download[:notes]

          .download-links

            - if channel != :unstable && channel != :docker && channel != :cloud
              %a.download-link(href="https://raw.githubusercontent.com/redis/redis/#{download[:branch]}/00-RELEASENOTES")
                %i.fa.fa-file-text-o
                Release notes

            - if channel == :stable
              - download_link = "https://download.redis.io/releases/redis-#{download[:version]}.tar.gz"
            - elsif channel == :docker || channel == :cloud
              - download_link = download[:url]
            - else
              - download_link = "https://github.com/redis/redis/archive/#{download[:version] || download[:branch]}.tar.gz"

            - if channel == :docker
              %a.download-link(href="#{download_link}")
                %i.fa.fa-external-link
                Docker Hub
            - elsif channel == :cloud
              %a.download-link(href="#{download_link}")
                %i.fa.fa-external-link
                Redis Cloud
            - else
              %a.download-link(href="#{download_link}")
                %i.fa.fa-arrow-circle-o-down
                Download
                = download[:version] || download[:branch]

    %h2 Other versions

    - DOWNLOADS[:other].each do |name, download|
      %h3
        = name.capitalize

        - if download[:branch] =~ /^\d/
          %span.download-version= "(#{download[:branch]})"

      = download[:notes]

      - if download[:version]
        %br
        See the

        %a(href="https://raw.githubusercontent.com/redis/redis/#{download[:branch]}/00-RELEASENOTES")
          release notes

        or

        - download_link = "https://download.redis.io/releases/redis-#{download[:version]}.tar.gz"

        %a(href="#{download_link}")
          download #{download[:version]}.

      - else
        %a(href="#{download[:url]}") Learn more

    %h3 Other

    Historical downloads are still available on
    = succeed "." do
      %a(href="https://download.redis.io/releases/") https://download.redis.io/releases/

    %p
      %strong Scripts and other automatic downloads
      can easily access the tarball of the latest Redis stable version at
      = succeed "," do
        %a{:href => "https://download.redis.io/redis-stable.tar.gz"} https://download.redis.io/redis-stable.tar.gz
      and its respective SHA256 sum at
      = succeed "." do
        %a{:href => "https://download.redis.io/redis-stable.tar.gz.SHA256SUM"} https://download.redis.io/redis-stable.tar.gz.SHA256SUM
      The source code of the latest stable release is
      = succeed "," do
        %a{:href => "https://download.redis.io/redis-stable"} always browsable here
      use the file
      %strong src/version.h
      in order to extract the version in an automatic way.

    %h2 How to verify files for integrity

    %p
      The Github repository
      %a(href="https://github.com/redis/redis-hashes/blob/master/README") redis-hashes
      contains a README file with SHA1 digests of released tarball archives.
      Note: the generic redis-stable.tar.gz tarball does not match any hash because it is modified to untar to the redis-stable directory.

    %h2 Installation
    %h3 From source code
    %p Download, extract and compile Redis with:
    %pre
      %code
        :preserve
          $ wget https://download.redis.io/releases/redis-#{STABLE_VERSION}.tar.gz
          $ tar xzf redis-#{STABLE_VERSION}.tar.gz
          $ cd redis-#{STABLE_VERSION}
          $ make
    %p
      The binaries that are now compiled are available in the
      %code src
      directory. Run Redis with:
    %pre
      %code
        :preserve
          $ src/redis-server
    %p You can interact with Redis using the built-in client:
    %pre
      %code
        :preserve
          $ src/redis-cli
          redis&gt; set foo bar
          OK
          redis&gt; get foo
          &quot;bar&quot;
    %h3 From the official Debian/Ubuntu APT Repository [Beta]
    %p
      You can install recent stable versions of Redis from the official
      <code>packages.redis.io</code> APT repository. Add the repository to the
      <code>apt</code> index, update it and install:
    %pre
      %code
        :preserve
          $ curl https://packages.redis.io/gpg | sudo apt-key add -
          $ echo "deb https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list
          $ sudo apt-get update
          $ sudo apt-get install redis
    %h3 From the official Ubuntu PPA
    %p
      You can install the latest stable version of Redis from the
      <code>redislabs/redis</code> package repository. Add the repository to the
      <code>apt</code> index, update it and install:
    %pre
      %code
        :preserve
          $ sudo add-apt-repository ppa:redislabs/redis
          $ sudo apt-get update
          $ sudo apt-get install redis
    %h3 From Snapcraft
    %p 
      You can install the latest stable version of Redis from the Snapcraft
      marketplace:
    %pre
      %code
        :preserve
          $ sudo snap install redis
    %p
      Are you new to Redis? Try our
      = succeed "." do
        %a{:href => "http://try.redis.io"} online, interactive tutorial

